generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bill {
  id                         Int            @id @default(autoincrement())
  code                       String?        @db.VarChar(45)
  user_id                    Int?
  bill_date                  DateTime?      @db.Timestamp(0)
  total_price                Decimal?       @default(0.00) @db.Decimal(18, 2)
  delivery_time              DateTime?      @db.Timestamp(0)
  status                     Int?           @default(-1)
  staff_id                   Int?
  note                       String?        @db.VarChar(255)
  payment                    Int?
  address                    String?        @db.Text
  created_date               DateTime?      @db.Timestamp(0)
  modified_date              DateTime?      @db.Timestamp(0)
  created_by                 Int?
  modified_by                Int?
  users_bill_user_idTousers  users?         @relation("bill_user_idTousers", fields: [user_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_bill_user")
  users_bill_staff_idTousers users?         @relation("bill_staff_idTousers", fields: [staff_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_bill_user_staff")
  product_bill               product_bill[]

  @@unique([user_id, bill_date], map: "unique_bill")
  @@index([staff_id], map: "fk_bill_user_staff")
}

model brand {
  id            Int       @id @default(autoincrement())
  brand_name    String    @db.VarChar(60)
  brand_code    String    @unique @db.VarChar(50)
  content       String?   @db.VarChar(255)
  active        Int       @default(1)
  icon          String?   @db.VarChar(255)
  created_date  DateTime  @default(now())
  modified_date DateTime  @updatedAt
  created_by    Int?
  modified_by   Int?
  product       product[]
}

model campaign {
  id              Int               @id @default(autoincrement())
  campaign_name   String            @db.VarChar(255)
  content         String?           @db.VarChar(255)
  start_day       DateTime
  end_day         DateTime
  active          Int               @default(1)
  created_date    DateTime          @default(now())
  modified_date   DateTime          @updatedAt
  created_by      Int?
  modified_by     Int?
  campaign_detail campaign_detail[]
}

model campaign_detail {
  id          Int      @id @default(autoincrement())
  product_id  Json?
  campaign_id Int
  discount    Int?
  campaign    campaign @relation(fields: [campaign_id], references: [id], onUpdate: Restrict, map: "fk_campaign_detail")

  @@index([campaign_id], map: "fk_campaign_detail")
}

model category {
  id             Int        @id @default(autoincrement())
  category_name  String     @db.VarChar(255)
  category_code  String     @unique @db.VarChar(255)
  description    String?    @db.VarChar(255)
  parent_id      Int?
  active         Int        @default(1)
  created_date   DateTime?  @default(now())
  modified_date  DateTime?  @updatedAt
  created_by     Int?
  modified_by    Int?
  category       category?  @relation("categoryTocategory", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_category_parent_id")
  other_category category[] @relation("categoryTocategory")
  product        product[]

  @@index([parent_id], map: "fk_category_parent_id")
}

model favorite {
  id           Int       @id @default(autoincrement())
  product_id   Int
  user_id      Int
  created_date DateTime? @db.Timestamp(0)
  product      product   @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "fk_favorite_product")
  users        users     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "fk_favorite_user")

  @@index([product_id], map: "fk_favorite_product")
  @@index([user_id], map: "fk_favorite_user")
}

model asset {
  id                   Int       @id @default(autoincrement())
  name                 String
  url                  String
  width                Int
  height               Int
  format               String
  cloudinary_asset_id  String
  cloudinary_public_id String
  created_date         DateTime? @db.Timestamp(0)
  modified_date        DateTime? @db.Timestamp(0)
  created_by           Int?
  modified_by          Int?
}

model product {
  id                 Int                  @id @default(autoincrement())
  product_name       String               @db.VarChar(255)
  sku                String               @unique @db.VarChar(255)
  price_sell         Decimal              @db.Decimal(18, 2)
  sale               Int?                 @default(0)
  price              Decimal?             @db.Decimal(18, 2)
  description        String?              @db.Text
  category_id        Int
  brand_id           Int?
  parent_id          Int?
  img                String?              @db.VarChar(255)
  active             Int                  @default(1)
  quantity           Int?                 @default(0)
  sold               Int?                 @default(0)
  rate               Float?               @default(0) @db.Float
  total_rate         Int?                 @default(0)
  created_date       DateTime?            @default(now())
  modified_date      DateTime?            @updatedAt
  created_by         Int?
  modified_by        Int?
  favorite           favorite[]
  brand              brand?               @relation(fields: [brand_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_brand")
  category           category             @relation(fields: [category_id], references: [id], onUpdate: Restrict, map: "fk_product_cate")
  product            product?             @relation("productToproduct", fields: [parent_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_id")
  other_product      product[]            @relation("productToproduct")
  product_bill       product_bill[]
  product_receipt    product_receipt[]
  product_speciality product_speciality[]

  @@index([brand_id], map: "fk_product_brand")
  @@index([category_id], map: "fk_product_cate")
  @@index([parent_id], map: "fk_product_id2")
}

model product_bill {
  id            Int       @id @default(autoincrement())
  product_id    Int?
  bill_id       Int?
  price_sell    Decimal?  @db.Decimal(18, 2)
  quantity      Int
  total_price   Decimal?  @db.Decimal(18, 2)
  status        Int?      @default(0)
  created_date  DateTime? @db.Timestamp(0)
  modified_date DateTime? @db.Timestamp(0)
  created_by    Int?
  modified_by   Int?
  bill          bill?     @relation(fields: [bill_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_bill_product")
  product       product?  @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_prodcut_bill")

  @@unique([product_id, bill_id], map: "unique_product_bill")
  @@index([bill_id], map: "fk_bill_product")
}

model product_receipt {
  id            Int       @id @default(autoincrement())
  product_id    Int?
  receipt_id    Int?
  price_entry   Decimal?  @db.Decimal(18, 2)
  quantity      Int
  total_price   Decimal?  @db.Decimal(18, 2)
  created_date  DateTime? @db.Timestamp(0)
  modified_date DateTime? @db.Timestamp(0)
  created_by    Int?
  modified_by   Int?
  product       product?  @relation(fields: [product_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_prodcut_receipt")
  receipt       receipt?  @relation(fields: [receipt_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_receipt_product")

  @@unique([product_id, receipt_id], map: "unique_product_receipt")
  @@index([receipt_id], map: "fk_receipt_product")
}

model product_speciality {
  id            Int        @id @default(autoincrement())
  speciality_id Int
  product_id    Int
  speciality    speciality @relation(fields: [speciality_id], references: [id], onUpdate: Restrict, map: "fk_product_speciality")
  product       product    @relation(fields: [product_id], references: [id], onUpdate: Restrict, map: "fk_speciality_product")

  @@unique([speciality_id, product_id], map: "unique_speciality")
  @@index([product_id], map: "fk_speciality_product")
}

model rate {
  id            Int      @id @default(autoincrement())
  product_id    Int
  user_id       Int
  title         String   @db.VarChar(255)
  stars         Float    @default(0)
  cmt_datetime  DateTime @default(now())
  content       String
  created_date  DateTime @default(now())
  modified_date DateTime @updatedAt
  created_by    Int?
  modified_by   Int?

  users users @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "fk_users_cmt")

  @@unique([product_id, user_id, cmt_datetime], map: "unique_comments")
  @@index([user_id], map: "fk_users_cmt")
}

model receipt {
  id                               Int               @id @default(autoincrement())
  code                             String?           @db.VarChar(45)
  user_id                          Int
  receipt_date                     DateTime          @default(now()) @db.Timestamp(0)
  received_date                    DateTime?         @db.Timestamp(0)
  total_price                      Decimal?          @db.Decimal(18, 2)
  status                           Int?
  supplier_id                      Int?
  note                             String?           @db.VarChar(255)
  created_date                     DateTime?         @db.Timestamp(0)
  modified_date                    DateTime?         @db.Timestamp(0)
  created_by                       Int?
  modified_by                      Int?
  product_receipt                  product_receipt[]
  users_receipt_user_idTousers     users             @relation("receipt_user_idTousers", fields: [user_id], references: [id], onUpdate: Restrict, map: "fk_receipt_user")
  users_receipt_supplier_idTousers users?            @relation("receipt_supplier_idTousers", fields: [supplier_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_receipt_user_supplier_id")

  @@unique([user_id, receipt_date], map: "unique_receipt")
  @@index([supplier_id], map: "fk_receipt_user_supplier_id")
}

model role {
  id            Int          @id @default(autoincrement())
  role_name     String       @db.VarChar(255)
  role_code     String       @unique @db.VarChar(255)
  description   String?
  created_date  DateTime     @default(now())
  modified_date DateTime     @updatedAt
  created_by    Int?
  modified_by   Int?
  permissions   Json?
  users_role    users_role[]
}

model speciality {
  id                 Int                  @id @default(autoincrement())
  type_name          String               @db.VarChar(50)
  type_number        Int
  description        String               @db.VarChar(100)
  type_code          String               @db.VarChar(50)
  type               String?              @db.VarChar(45)
  active             Int
  position           Int?
  created_date       DateTime?            @db.Timestamp(0)
  modified_date      DateTime?            @db.Timestamp(0)
  created_by         Int?
  modified_by        Int?
  product_speciality product_speciality[]

  @@unique([type_name, type_number], map: "unique_speciality")
}

model users {
  id                                 Int          @id @default(autoincrement())
  hashed_rt                          String?
  password                           String       @db.VarChar(255)
  first_name                         String?      @db.VarChar(255)
  last_name                          String?      @db.VarChar(255)
  gender                             Int          @default(0)
  date_of_birth                      DateTime?
  email                              String       @unique @db.VarChar(125)
  phone                              String?      @db.VarChar(10)
  active                             Int          @default(1)
  created_date                       DateTime     @default(now())
  modified_date                      DateTime     @updatedAt
  created_by                         Int?
  modified_by                        Int?
  bill_bill_user_idTousers           bill[]       @relation("bill_user_idTousers")
  bill_bill_staff_idTousers          bill[]       @relation("bill_staff_idTousers")
  favorite                           favorite[]
  rate                               rate[]
  receipt_receipt_user_idTousers     receipt[]    @relation("receipt_user_idTousers")
  receipt_receipt_supplier_idTousers receipt[]    @relation("receipt_supplier_idTousers")
  users_role                         users_role[]
}

model users_role {
  id      Int   @id @default(autoincrement())
  user_id Int
  role_id Int
  role    role  @relation(fields: [role_id], references: [id], onUpdate: Restrict, map: "fk_role_users")
  users   users @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "fk_users_role")

  @@unique([user_id, role_id], map: "unique_speciality")
  @@index([role_id], map: "fk_role_users")
}
